#+STARTUP: overview
#+OPTIONS: ^:nil
#+OPTIONS: p:t

** Notes
*** Tasks
**** Codebase
***** set up repository with hooks and data set grabbing
***** data-set: https://www.analyticsvidhya.com/blog/2021/03/language-detection-using-natural-language-processing/
***** or larger data set: https://zenodo.org/record/841984
***** n-grams: http://cloudmark.github.io/Language-Detection/
***** can use bigram or trigram approach but will not work so well on short phrases
***** check if out of place error is the same as normalized vector difference norm, but show it empirically can work
***** can use numpy and sklearn for basic operations such as vector comparisons and accuracy/f1 scores

**** Presentation
***** prepare 5 slides within 15 minutes for HSLU interview
***** motivate structure of language with basic commentary and how this works
***** mention older articles use data more wisely -> eg. of BPE paper from before
***** mention usage of modern techniques ommitted due to no libraries allowed
***** cite and describe classical problem -> use ~Cavnar and Trenkle (1994)~
***** them mention new NN approaches to handle short phrases where language profiles may not be built up as yet
***** heavy solution could also be a large word level vocabulary which can handle everything -> would actually be ideal if possible
